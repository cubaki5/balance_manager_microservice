{
  "errored": null,
  "escaped": null,
  "killed": [
    {
      "mutator": {
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatorName": "branch/if",
        "originalFilePath": "internal/models/models.go",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \n func (r *Reservation) Validate() error {\n \tif r.UserID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение user_id\")\n+\t\t_ = errors.New\n \t}\n \n \tif r.OrderID.Int64() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.0\" with checksum 419e336fbb9890dd648df4177b37b8e3\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -55,7 +55,7 @@\n \t}\n \n \tif r.OrderID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение order_id\")\n+\t\t_ = errors.New\n \t}\n \n \tif r.ServiceID.Int64() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.1\" with checksum 0e5c8d420c17f054ce3f51801742a229\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -59,7 +59,7 @@\n \t}\n \n \tif r.ServiceID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение service_id\")\n+\t\t_ = errors.New\n \t}\n \n \tif r.Cost.Int32() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.2\" with checksum 46225212f81586de8db30b19f152cf4c\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -63,7 +63,7 @@\n \t}\n \n \tif r.Cost.Int32() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение cost\")\n+\t\t_ = errors.New\n \t}\n \n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.3\" with checksum ad7e4e044e6febcf6d9950b22d2c6c1f\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -71,7 +71,7 @@\n \n func (a *Accrual) Validate() error {\n \tif a.UserID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение user_id\")\n+\t\t_ = errors.New\n \t}\n \tif a.Income.Int32() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение income\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.4\" with checksum 955848cf24863ba9196b24d0177b2373\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -74,7 +74,7 @@\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif a.Income.Int32() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение income\")\n+\t\t_ = errors.New\n \t}\n \n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.5\" with checksum 7f09a4949ef990b9e885e388cdbd9307\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -82,7 +82,7 @@\n \n func (a Account) Validate() error {\n \tif a.UserID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение user_id\")\n+\t\t_ = errors.New\n \t}\n \treturn nil\n }\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.6\" with checksum 060d24dac35efaf4a84afe0cf5b837f6\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -89,7 +89,7 @@\n \n func (t *TransactionsHistoryParams) Validate() error {\n \tif t.UserID.Int64() \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение user_id\")\n+\t\t_ = errors.New\n \t}\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.7\" with checksum 157c8e78dff9f96cb44bede558639318\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -92,7 +92,7 @@\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif t.Limit \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение limit\")\n+\t\t_ = errors.New\n \t}\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.8\" with checksum 010e0ee58a96c129c200a5f87987031a\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\t_ = errors.New\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -95,7 +95,7 @@\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n-\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n+\t\t_ = errors.New\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.9\" with checksum eb020a8216c34cb78e22d4b1f8127681\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\t_ = errors.New\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -98,7 +98,7 @@\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n-\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n+\t\t_ = errors.New\n \t}\n \tif t.Page \u003c= 0 {\n \t\treturn errors.New(\"неверное значение page\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.10\" with checksum 3914f5330a7417b5e1abe46baaee5e67\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\t_ = errors.New\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -101,7 +101,7 @@\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n-\t\treturn errors.New(\"неверное значение page\")\n+\t\t_ = errors.New\n \t}\n \treturn nil\n }\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.11\" with checksum 3d7c432fd3df0a2100add21ab952e231\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\t_ = errors.New\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -108,7 +108,7 @@\n \n func (r *ReportDate) Validate() error {\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n-\t\treturn errors.New(\"неверное значение month\")\n+\t\t_ = errors.New\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.12\" with checksum 8895cba993dc2c764f230ed830374336\n"
    },
    {
      "mutator": {
        "mutatorName": "branch/if",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\t_ = errors.New\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -111,7 +111,7 @@\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n-\t\treturn errors.New(\"неверное значение year\")\n+\t\t_ = errors.New\n \t}\n \treturn nil\n }\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.13\" with checksum 9932a38661fe539ff5cbc3bddb14126d\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -50,7 +50,7 @@\n }\n \n func (r *Reservation) Validate() error {\n-\tif r.UserID.Int64() \u003c= 0 {\n+\tif r.UserID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.14\" with checksum f703ca36080ab4ae2c072d1d716f65f7\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -54,7 +54,7 @@\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n-\tif r.OrderID.Int64() \u003c= 0 {\n+\tif r.OrderID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.15\" with checksum 4df40c797dd529b8a225747ee2d44e3c\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -58,7 +58,7 @@\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n-\tif r.ServiceID.Int64() \u003c= 0 {\n+\tif r.ServiceID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.16\" with checksum 45cbc62e381b64069cab465e505037ae\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -62,7 +62,7 @@\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n-\tif r.Cost.Int32() \u003c= 0 {\n+\tif r.Cost.Int32() \u003c 0 {\n \t\treturn errors.New(\"неверное значение cost\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.17\" with checksum a6ae18b6236779104e7425cbb5269774\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -70,7 +70,7 @@\n }\n \n func (a *Accrual) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif a.Income.Int32() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.18\" with checksum 2aed9ac723d39ad5bc60a42426a1474b\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -73,7 +73,7 @@\n \tif a.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif a.Income.Int32() \u003c= 0 {\n+\tif a.Income.Int32() \u003c 0 {\n \t\treturn errors.New(\"неверное значение income\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.19\" with checksum 5feb78e8f1e60a847ef05123a88488bf\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -81,7 +81,7 @@\n }\n \n func (a Account) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.20\" with checksum 3431516d28728ea01f9c8efe7ac452e0\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -88,7 +88,7 @@\n }\n \n func (t *TransactionsHistoryParams) Validate() error {\n-\tif t.UserID.Int64() \u003c= 0 {\n+\tif t.UserID.Int64() \u003c 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif t.Limit \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.21\" with checksum 23731b9f0150446edbcc77fb177ab32c\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -91,7 +91,7 @@\n \tif t.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif t.Limit \u003c= 0 {\n+\tif t.Limit \u003c 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.22\" with checksum cbed0e613b2e084452dd7477130bf114\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -100,7 +100,7 @@\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n-\tif t.Page \u003c= 0 {\n+\tif t.Page \u003c 0 {\n \t\treturn errors.New(\"неверное значение page\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.23\" with checksum 9434aacbb42a074866ceb8ab03d6b912\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e= 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e= 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.24\" with checksum 282aee7868913fdd18489da33d828816\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c= 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 12 || r.Month \u003c= 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.25\" with checksum 20a719cc82a432618f93eee6d58f842a\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c= 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c= 1900 || r.Year \u003e 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.26\" with checksum 6facca01d108c1a1a30acc20ab1cc743\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/comparison",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e= 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1900 || r.Year \u003e= 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.27\" with checksum 1dd9ce17a4e5c755381ae7aa29380e38\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif true \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif true \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.28\" with checksum a54d8082a75850269b2a922f540abae0\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 true {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif t.SortDate != 0 \u0026\u0026 true {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.29\" with checksum ba1ff8ee6aa580e00aed48b1c82ddfbe\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif true \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif true \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.30\" with checksum 62888d81b66d8094d55039cfc1bd5dad\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 true {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif t.SortSum != 0 \u0026\u0026 true {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.31\" with checksum 7a4d3336ff7a18c0beb9f683366d1429\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif false || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif false || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.32\" with checksum 63e235d5e81af08cf77ca7f82d34604f\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || false {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 12 || false {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.33\" with checksum 1ce1cccd5e0df54828a2700edf8ee581\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif false || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif false || r.Year \u003e 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.34\" with checksum 4fa21e382a7531d1ec405bac323b0941\n"
    },
    {
      "mutator": {
        "mutatorName": "expression/remove",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || false {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1900 || false {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.35\" with checksum 4d9f450eac48bf70b65fcb27b4313dbf\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -50,7 +50,7 @@\n }\n \n func (r *Reservation) Validate() error {\n-\tif r.UserID.Int64() \u003c= 0 {\n+\tif r.UserID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.36\" with checksum 008f62af135651d4cd3ede1ae69e8dba\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -54,7 +54,7 @@\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n-\tif r.OrderID.Int64() \u003c= 0 {\n+\tif r.OrderID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.37\" with checksum 67c55592bb4114cc6b4107d4255e459b\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -58,7 +58,7 @@\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n-\tif r.ServiceID.Int64() \u003c= 0 {\n+\tif r.ServiceID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.38\" with checksum 2e5f02051e52b2ddd0ebccee9687036e\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -62,7 +62,7 @@\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n-\tif r.Cost.Int32() \u003c= 0 {\n+\tif r.Cost.Int32() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение cost\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.39\" with checksum f2a7c2b6885c255fd62d084c9e472a7c\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -70,7 +70,7 @@\n }\n \n func (a *Accrual) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif a.Income.Int32() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.40\" with checksum 406a6220ac9454349079cf02fc1496b8\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -73,7 +73,7 @@\n \tif a.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif a.Income.Int32() \u003c= 0 {\n+\tif a.Income.Int32() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение income\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.41\" with checksum d11d50347be6a67a8c0e5350b183dcde\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -81,7 +81,7 @@\n }\n \n func (a Account) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.42\" with checksum a880a8aba96a1e7a5bb2d2412a3c6513\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= -1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -88,7 +88,7 @@\n }\n \n func (t *TransactionsHistoryParams) Validate() error {\n-\tif t.UserID.Int64() \u003c= 0 {\n+\tif t.UserID.Int64() \u003c= -1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif t.Limit \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.43\" with checksum 811d4cfbcee4b1efc1fb596d7dc1f1f3\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= -1 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -91,7 +91,7 @@\n \tif t.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif t.Limit \u003c= 0 {\n+\tif t.Limit \u003c= -1 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.44\" with checksum 064d6f7217d1af299c8ad52a70b184c6\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != -1 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif t.SortDate != -1 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.45\" with checksum 52a28678b0f2bd6b337438e9ff561b07\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 0 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 0 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.46\" with checksum 69e0008a4526d5ec47347db6632dd475\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != -1 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif t.SortSum != -1 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.47\" with checksum 28a3e612b06652493bbebbdfaf443694\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 0 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 0 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.48\" with checksum ff6e6e737fba740dca45a837f53770b0\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= -1 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -100,7 +100,7 @@\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n-\tif t.Page \u003c= 0 {\n+\tif t.Page \u003c= -1 {\n \t\treturn errors.New(\"неверное значение page\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.49\" with checksum 0f39528462197ba72533078982caca14\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 11 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 11 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.50\" with checksum 4a9a66d1d3ac74cc96662d9766dd8543\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 0 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 12 || r.Month \u003c 0 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.51\" with checksum 50dd4395404d00400dc78986cb820398\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1899 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1899 || r.Year \u003e 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.52\" with checksum a711c44462c8f42e418525c89565411d\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/decrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 2999 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1900 || r.Year \u003e 2999 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.53\" with checksum 0577e5ea0e0ba86e432ec76a5b38a0ff\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -50,7 +50,7 @@\n }\n \n func (r *Reservation) Validate() error {\n-\tif r.UserID.Int64() \u003c= 0 {\n+\tif r.UserID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.54\" with checksum 026b91feb7a8bd25c148dba166a9d8b5\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -54,7 +54,7 @@\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \n-\tif r.OrderID.Int64() \u003c= 0 {\n+\tif r.OrderID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.55\" with checksum 356d7a4c58af20be4a17a899cd9de2d1\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -58,7 +58,7 @@\n \t\treturn errors.New(\"неверное значение order_id\")\n \t}\n \n-\tif r.ServiceID.Int64() \u003c= 0 {\n+\tif r.ServiceID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.56\" with checksum e2b5d1864276833bea2fb5cf8db59102\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -62,7 +62,7 @@\n \t\treturn errors.New(\"неверное значение service_id\")\n \t}\n \n-\tif r.Cost.Int32() \u003c= 0 {\n+\tif r.Cost.Int32() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение cost\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.57\" with checksum fed17fa1b2500cfe2d8a3372dadd26a8\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -70,7 +70,7 @@\n }\n \n func (a *Accrual) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif a.Income.Int32() \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.58\" with checksum dbbed49769dbd3352e652af76d7705b6\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -73,7 +73,7 @@\n \tif a.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif a.Income.Int32() \u003c= 0 {\n+\tif a.Income.Int32() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение income\")\n \t}\n \n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.59\" with checksum e21970d01f5e33cebc4785a36b0398dc\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -81,7 +81,7 @@\n }\n \n func (a Account) Validate() error {\n-\tif a.UserID.Int64() \u003c= 0 {\n+\tif a.UserID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.60\" with checksum 496f11f67356a6a57e8c0b27867f3de7\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 1 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -88,7 +88,7 @@\n }\n \n func (t *TransactionsHistoryParams) Validate() error {\n-\tif t.UserID.Int64() \u003c= 0 {\n+\tif t.UserID.Int64() \u003c= 1 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n \tif t.Limit \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.61\" with checksum 5da321f4219fb8291fbc30f47505ac26\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 1 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -91,7 +91,7 @@\n \tif t.UserID.Int64() \u003c= 0 {\n \t\treturn errors.New(\"неверное значение user_id\")\n \t}\n-\tif t.Limit \u003c= 0 {\n+\tif t.Limit \u003c= 1 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.62\" with checksum e1ce487f19710adc0e5a9b9ce1b11c4e\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 1 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif t.SortDate != 1 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.63\" with checksum 2726e1ceba975b4f97a549bb9825b62b\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 2 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -94,7 +94,7 @@\n \tif t.Limit \u003c= 0 {\n \t\treturn errors.New(\"неверное значение limit\")\n \t}\n-\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n+\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 2 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.64\" with checksum 37fba0442ee59a75e13c01b360d768a9\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 1 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif t.SortSum != 1 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.65\" with checksum 49dfafb6a0243b4028ac40aaa2ac4f13\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 2 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -97,7 +97,7 @@\n \tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n \t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n \t}\n-\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n+\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 2 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n \tif t.Page \u003c= 0 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.66\" with checksum 4d9ba7ea93878684bc8be81e99610278\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 1 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -100,7 +100,7 @@\n \tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n \t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n \t}\n-\tif t.Page \u003c= 0 {\n+\tif t.Page \u003c= 1 {\n \t\treturn errors.New(\"неверное значение page\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.67\" with checksum 44e3866b72bd71e55d56ee4869257420\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 13 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 13 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.68\" with checksum a68ecb166d446718b25b6712df9708ad\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 2 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -107,7 +107,7 @@\n }\n \n func (r *ReportDate) Validate() error {\n-\tif r.Month \u003e 12 || r.Month \u003c 1 {\n+\tif r.Month \u003e 12 || r.Month \u003c 2 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n \tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.69\" with checksum 377ed461f6c89fecc1f2f69c4e342b02\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1901 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1901 || r.Year \u003e 3000 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.70\" with checksum fa6c4367808d95a28256641b5bc7bec4\n"
    },
    {
      "mutator": {
        "mutatorName": "numbers/incrementer",
        "originalSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "mutatedSourceCode": "package models\n\nimport (\n\t\"errors\"\n\t\"time\"\n\n\t\"balance_avito/internal/models/types\"\n)\n\ntype Accrual struct {\n\tUserID types.UserID\n\tIncome types.Income\n}\n\ntype Reservation struct {\n\tUserID    types.UserID\n\tServiceID types.ServiceID\n\tOrderID   types.OrderID\n\tCost      types.Cost\n}\n\ntype Account struct {\n\tUserID  types.UserID\n\tBalance types.Balance\n}\n\ntype ReportDate struct {\n\tYear  types.Year\n\tMonth types.Month\n}\n\ntype AccountingReport struct {\n\tServiceID types.ServiceID\n\tIncome    types.Income\n}\n\ntype TransactionsHistoryParams struct {\n\tUserID   types.UserID\n\tSortDate int\n\tSortSum  int\n\tPage     int\n\tLimit    int\n}\n\ntype TransactionsHistory struct {\n\tOperation types.Operation\n\tComments  types.Comment\n\tTime      time.Time\n\tSum       types.Income\n}\n\nfunc (r *Reservation) Validate() error {\n\tif r.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\n\tif r.OrderID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение order_id\")\n\t}\n\n\tif r.ServiceID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение service_id\")\n\t}\n\n\tif r.Cost.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение cost\")\n\t}\n\n\treturn nil\n}\n\nfunc (a *Accrual) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif a.Income.Int32() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение income\")\n\t}\n\n\treturn nil\n}\n\nfunc (a Account) Validate() error {\n\tif a.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\treturn nil\n}\n\nfunc (t *TransactionsHistoryParams) Validate() error {\n\tif t.UserID.Int64() \u003c= 0 {\n\t\treturn errors.New(\"неверное значение user_id\")\n\t}\n\tif t.Limit \u003c= 0 {\n\t\treturn errors.New(\"неверное значение limit\")\n\t}\n\tif t.SortDate != 0 \u0026\u0026 t.SortDate != 1 {\n\t\treturn errors.New(\"неверное значение sortDate (sortDate=1 - включение сортировки по дате, sortDate=0 - выключение сортировки по дате)\")\n\t}\n\tif t.SortSum != 0 \u0026\u0026 t.SortSum != 1 {\n\t\treturn errors.New(\"неверное значение sortSum (sortSum=1 - включение сортировки по сумме, sortSum=0 - выключение сортировки по сумме)\")\n\t}\n\tif t.Page \u003c= 0 {\n\t\treturn errors.New(\"неверное значение page\")\n\t}\n\treturn nil\n}\n\nfunc (r *ReportDate) Validate() error {\n\tif r.Month \u003e 12 || r.Month \u003c 1 {\n\t\treturn errors.New(\"неверное значение month\")\n\t}\n\tif r.Year \u003c 1900 || r.Year \u003e 3001 {\n\t\treturn errors.New(\"неверное значение year\")\n\t}\n\treturn nil\n}\n",
        "originalFilePath": "internal/models/models.go",
        "originalStartLine": 0
      },
      "diff": "--- Original\n+++ New\n@@ -110,7 +110,7 @@\n \tif r.Month \u003e 12 || r.Month \u003c 1 {\n \t\treturn errors.New(\"неверное значение month\")\n \t}\n-\tif r.Year \u003c 1900 || r.Year \u003e 3000 {\n+\tif r.Year \u003c 1900 || r.Year \u003e 3001 {\n \t\treturn errors.New(\"неверное значение year\")\n \t}\n \treturn nil\n",
      "processOutput": "PASS \"/tmp/go-mutesting-3478838064/internal/models/models.go.71\" with checksum 4cf2a74ca8b39e04476ee5d61752255d\n"
    }
  ],
  "stats": {
    "totalMutantsCount": 72,
    "killedCount": 72,
    "notCoveredCount": 0,
    "escapedCount": 0,
    "errorCount": 0,
    "skippedCount": 0,
    "timeOutCount": 0,
    "msi": 1,
    "mutationCodeCoverage": 0,
    "coveredCodeMsi": 0
  },
  "timeouted":null
}