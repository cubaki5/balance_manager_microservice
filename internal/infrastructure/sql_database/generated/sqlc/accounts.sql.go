// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: accounts.sql

package sqlc

import (
	"context"
)

const addAccount = `-- name: AddAccount :exec
INSERT INTO accounts (
       user_id, balance
) VALUE (
    ?, ?
    )
`

type AddAccountParams struct {
	UserID  int64
	Balance int32
}

func (q *Queries) AddAccount(ctx context.Context, arg AddAccountParams) error {
	_, err := q.db.ExecContext(ctx, addAccount, arg.UserID, arg.Balance)
	return err
}

const getAccount = `-- name: GetAccount :one
SELECT id, user_id, balance FROM accounts
WHERE user_id = ?
`

func (q *Queries) GetAccount(ctx context.Context, userID int64) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccount, userID)
	var i Account
	err := row.Scan(&i.ID, &i.UserID, &i.Balance)
	return i, err
}

const updateAccount = `-- name: UpdateAccount :exec
UPDATE accounts
SET balance = ?
WHERE user_id = ?
`

type UpdateAccountParams struct {
	Balance int32
	UserID  int64
}

func (q *Queries) UpdateAccount(ctx context.Context, arg UpdateAccountParams) error {
	_, err := q.db.ExecContext(ctx, updateAccount, arg.Balance, arg.UserID)
	return err
}
