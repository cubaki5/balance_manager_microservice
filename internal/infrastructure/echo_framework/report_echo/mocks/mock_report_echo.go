// Code generated by MockGen. DO NOT EDIT.
// Source: report_echo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "balance_avito/internal/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReport is a mock of Report interface.
type MockReport struct {
	ctrl     *gomock.Controller
	recorder *MockReportMockRecorder
}

// MockReportMockRecorder is the mock recorder for MockReport.
type MockReportMockRecorder struct {
	mock *MockReport
}

// NewMockReport creates a new mock instance.
func NewMockReport(ctrl *gomock.Controller) *MockReport {
	mock := &MockReport{ctrl: ctrl}
	mock.recorder = &MockReportMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReport) EXPECT() *MockReportMockRecorder {
	return m.recorder
}

// Accounting mocks base method.
func (m *MockReport) Accounting(ctx context.Context, reportDate models.ReportDate) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accounting", ctx, reportDate)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Accounting indicates an expected call of Accounting.
func (mr *MockReportMockRecorder) Accounting(ctx, reportDate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accounting", reflect.TypeOf((*MockReport)(nil).Accounting), ctx, reportDate)
}

// TransactionsHistory mocks base method.
func (m *MockReport) TransactionsHistory(ctx context.Context, transactionsHistoryParams models.TransactionsHistoryParams) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionsHistory", ctx, transactionsHistoryParams)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransactionsHistory indicates an expected call of TransactionsHistory.
func (mr *MockReportMockRecorder) TransactionsHistory(ctx, transactionsHistoryParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionsHistory", reflect.TypeOf((*MockReport)(nil).TransactionsHistory), ctx, transactionsHistoryParams)
}
